version: 2.1

executors:
  docker-docker:
    docker:
      - image: cimg/base:current
    resource_class: small
    
  docker-machine:
    machine:
      image: ubuntu-2204:current
    resource_class: large

parameters:
  build-and-push:
    type: boolean
    default: false
  run-all:
    type: boolean
    default: false

commands:
  setup-qemu:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --privileged --rm tonistiigi/binfmt --install all
      - run:
          name: Create builder
          command: |
            docker buildx create --name multi-arch-build --bootstrap --use
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
   build-casdoor-cache-amd64:
    executor: docker-machine
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_TAG: casdoor-amd64
    working_directory: ~/project/src/teste
    steps:
      - checkout:
          path: ~/project
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_TAG" \
                  --tag "$CACHE_REPO:$CACHE_TAG" \
                  --push --platform=linux/amd64 .

   build-casdoor-cache-arm64:
    executor: docker-machine
    resource_class: arm.large
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_TAG: casdoor-arm64
    working_directory: ~/project/src/teste
    steps:
      - checkout:
          path: ~/project
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_TAG" \
                  --tag "$CACHE_REPO:$CACHE_TAG" \
                  --push --platform=linux/arm64/v8 .

   build-casdoor-multi-arch:
    executor: docker-machine
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_AMD64: casdoor-amd64
      CACHE_ARM64: casdoor-arm64
      IMAGE_REPO: igorferreir4/casdoor
      IMAGE_TAGS: latest
    working_directory: ~/project/src/teste
    steps:
      - checkout:
          path: ~/project
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              TAGS=""
              for tag in $(echo $IMAGE_TAGS | tr "," " "); do
                TAGS="$TAGS -t $IMAGE_REPO:$tag"
              done
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_AMD64" \
                  --cache-from="$CACHE_REPO:$CACHE_ARM64" \
                  --push --platform=linux/amd64,linux/arm64/v8 $TAGS .

   deploy-casdoor:
    executor: docker-docker
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:hLlCCj1OZj3pbBbgrGvfHjdTf20F4IYKyKvyJTMXC/A"
      - run:
          name: Export date of build
          command: |
            ssh-keyscan $SSH_HOST_IGOR_ARM >> ~/.ssh/known_hosts
            ssh $SSH_USER@$SSH_HOST_IGOR_ARM "echo Executado em "$(date -d "-3 hours" +"%d/%m/%G - %Hh:%Mm:%Ss") - casdoor TESTE" >> circleci-data.txt"
      # - run:
      #     name: Deploy to my server
      #     command: |
      #       ssh $SSH_USER@$SSH_HOST_IGOR_ARM "~/50GB/docker/executar-docker-compose-up-d.sh >> ~/circleci.txt 2>&1"

workflows:
   casdoor-vTESTE:
    when: 
      or: 
        - << pipeline.parameters.build-and-push >>
        - << pipeline.parameters.run-all >>
    jobs:
      - build-casdoor-cache-amd64
      - build-casdoor-cache-arm64
      - build-casdoor-multi-arch:
          requires:
            - build-casdoor-cache-amd64
            - build-casdoor-cache-arm64
      - deploy-casdoor:
          requires:
            - build-casdoor-multi-arch