version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:2023.12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Run tests
          command: |
            docker-compose -f ./docker-compose.test.yml up
      - run:
          name: Build and Push application Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKERHUB_USERNAME/circleci-docker-example:$TAG .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/circleci-docker-example:$TAG

# version: 2.1

# executors:
#   docker-publisher:
#     environment:
#       IMAGE_TAG: igorferreir4/circleci:latest
#     docker:
#       - image: docker:stable

# jobs:
#   build:
#     executor: docker-publisher
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: Build Docker image
#           command: docker build --tag "${IMAGE_TAG}" .
#       - run:
#           name: Archive Docker image
#           command: docker save --output image.tar "${IMAGE_TAG}"
#       - persist_to_workspace:
#           root: .
#           paths:
#             - ./image.tar

#   push:
#     executor: docker-publisher
#     steps:
#       - setup_remote_docker
#       - attach_workspace:
#           at: /tmp/workspace
#       - run:
#           name: Load Docker image
#           command: docker load --input /tmp/workspace/image.tar
#       - run:
#           name: Publish Docker image
#           command: |
#             echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
#             docker push "${IMAGE_TAG}"

# workflows:
#   version: 2
#   build-push:
#     jobs:
#       - build
#       - push:
#           requires:
#             - build
#           filters:
#             branches:
#               only: main